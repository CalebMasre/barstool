{"ast":null,"code":"var _jsxFileName = \"/Users/calebwossen/RCP/barstool/src/components/PostList.js\";\nimport React from 'react';\nimport axios from 'axios';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './Page.css';\nimport { Card, Row, Col } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class PostList extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      posts: []\n    };\n  }\n  componentDidMount() {\n    axios.get(`https://www.jalirani.com/files/barstool.json`).then(res => {\n      const posts = res.data;\n      this.setState({\n        posts\n      });\n    });\n  }\n  render() {\n    return this.state.posts.map(post => /*#__PURE__*/_jsxDEV(Post, {\n      json: post\n    }, post.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 15\n    }, this));\n  }\n}\nfunction Thumbnail(props) {\n  return /*#__PURE__*/_jsxDEV(\"img\", {\n    width: 100,\n    height: 100,\n    className: \"thumbnail\",\n    src: props.url,\n    alt: \"srry bruh\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 12\n  }, this);\n}\n_c = Thumbnail;\n;\nfunction Post(props) {\n  var j = props.json;\n  var title = j.title;\n  var count = j.comment_count;\n  var author = j.author.name;\n  var authorImg = j.author.avatar;\n  var thumbnail = j.thumbnail.location + j.thumbnail.images.small;\n  var link = j.url;\n  return /*#__PURE__*/_jsxDEV(Card, {\n    width: 100,\n    height: 100,\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        children: /*#__PURE__*/_jsxDEV(Thumbnail, {\n          url: thumbnail\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        children: [/*#__PURE__*/_jsxDEV(Row, {\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            href: link,\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 43\n            }, this), \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 26\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\" by \", author]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 26\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          width: 25,\n          height: 25,\n          src: authorImg,\n          alt: \"srry again bruh\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [count, \" comments\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 26\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 9\n  }, this);\n}\n_c2 = Post;\n;\nvar _c, _c2;\n$RefreshReg$(_c, \"Thumbnail\");\n$RefreshReg$(_c2, \"Post\");","map":{"version":3,"names":["React","axios","Card","Row","Col","PostList","Component","state","posts","componentDidMount","get","then","res","data","setState","render","map","post","id","Thumbnail","props","url","Post","j","json","title","count","comment_count","author","name","authorImg","avatar","thumbnail","location","images","small","link"],"sources":["/Users/calebwossen/RCP/barstool/src/components/PostList.js"],"sourcesContent":["import React from 'react';\nimport axios from 'axios';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './Page.css'\nimport { Card, Row, Col} from \"react-bootstrap\";\n\nexport default class PostList extends React.Component {\n  state = {\n    posts: []\n  }\n\n  componentDidMount() {\n    axios.get(`https://www.jalirani.com/files/barstool.json`)\n      .then(res => {\n        const posts = res.data;\n        this.setState({ posts });\n      })\n  }\n\n  render() {\n    return (\n          this.state.posts\n            .map(post =>\n              <Post key={post.id} json = {post}/>\n            )\n      \n    )\n  }\n}\n\n  \n  \nfunction Thumbnail(props) {\n    return <img width={100} height={100} className = \"thumbnail\" src = {props.url} alt = \"srry bruh\"/>\n};\n  \n  \n  function Post(props) {\n    var j = props.json;\n    var title = j.title;\n    var count = j.comment_count;\n    var author = j.author.name;\n    var authorImg = j.author.avatar\n    var thumbnail = j.thumbnail.location + j.thumbnail.images.small\n    var link = j.url\n  \n    return(\n        <Card width={100} height={100}>\n            <Row>\n                <Col>\n                    <Thumbnail url = {thumbnail}/>\n                </Col>\n\n                <Col>\n                    <Row><a href = {link}><p>{title}</p> </a></Row>\n                    <Row><p> by {author}</p></Row>\n                    <img width={25} height={25} src = {authorImg} alt = \"srry again bruh\" />\n                    <Row><p>{count} comments</p></Row>\n                </Col>\n            </Row>\n          </Card>\n    )};"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}